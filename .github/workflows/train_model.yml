name: Train Weather Model

on:
  #   push:
  #     branches: [main]
  workflow_dispatch:

jobs:
  train:
    runs-on: ubuntu-latest
    env:
      MLFLOW_TRACKING_URI: https://dagshub.com/${{ secrets.DAGSHUB_USER }}/${{ secrets.DAGSHUB_REPO }}.mlflow
      MLFLOW_TRACKING_USERNAME: ${{ secrets.DAGSHUB_USERNAME }}
      MLFLOW_TRACKING_PASSWORD: ${{ secrets.DAGSHUB_TOKEN }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Python 3.8
        uses: actions/setup-python@v4
        with:
          python-version: 3.8

      - name: Install dependencies
        run: |
          pip install mlflow
          pip install -r MLProject/requirements.txt || true

      - name: Run MLflow project
        run: |
          mlflow run MLProject -P data_path=weather_preprocessed.csv

      - name: Build and Push Docker Image
        run: |
          # Get latest run ID
          RUN_ID=$(mlflow runs list --experiment-names "Weather_Prediction_CI" --max-results 1 | awk 'NR==2 {print $4}')

          # Build Docker image
          mlflow models build-docker -m "runs:/$RUN_ID/model" -n "weather-predictor"

          # Login to Docker Hub
          echo ${{ secrets.DOCKERHUB_TOKEN }} | docker login -u ${{ secrets.DOCKERHUB_USERNAME }} --password-stdin

          # Tag and push
          docker tag weather-predictor:latest ${{ secrets.DOCKERHUB_USERNAME }}/weather-predictor:latest
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/weather-predictor:latest

      - name: Upload Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: model-artifacts
          path: |
            mlruns/
            MLProject/
